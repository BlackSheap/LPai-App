"use strict";(()=>{var t={};t.id=200,t.ids=[200],t.modules={1428:t=>{t.exports=import("axios")},2518:t=>{t.exports=require("mongodb")},3480:(t,e,o)=>{t.exports=o(5600)},4025:(t,e,o)=>{o.a(t,async(t,n)=>{try{o.r(e),o.d(e,{config:()=>d,default:()=>l,routeModule:()=>u});var s=o(3480),r=o(8667),a=o(6435),c=o(6583),i=t([c]);c=(i.then?(await i)():i)[0];let l=(0,a.M)(c,"default"),d=(0,a.M)(c,"config"),u=new s.PagesAPIRouteModule({definition:{kind:r.A.PAGES_API,page:"/api/contacts",pathname:"/api/contacts",bundlePath:"",filename:""},userland:c});n()}catch(t){n(t)}})},5600:t=>{t.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(t,e)=>{Object.defineProperty(e,"M",{enumerable:!0,get:function(){return function t(e,o){return o in e?e[o]:"then"in e&&"function"==typeof e.then?e.then(e=>t(e,o)):"function"==typeof e&&"default"===o?e:void 0}}})},6583:(t,e,o)=>{o.a(t,async(t,n)=>{try{o.r(e),o.d(e,{default:()=>c});var s=o(9194),r=o(1428),a=t([r]);async function c(t,e){let o=(await s.A).db("lpai");switch(t.method){case"GET":return i(t,e,o);case"POST":return l(t,e,o);default:return e.status(405).json({error:"Method not allowed"})}}async function i(t,e,o){let n=t.query.locationId;if(!n)return e.status(400).json({error:"Missing locationId"});try{let t=await o.collection("contacts").find({locationId:n}).sort({createdAt:-1}).toArray();return console.log("\uD83D\uDCE6 contacts found:",t.length),e.status(200).json(t)}catch(t){return console.error("‚ùå Failed to fetch contacts:",t),e.status(500).json({error:"Internal server error"})}}async function l(t,e,o){let{firstName:n,lastName:s,email:a,phone:c,notes:i,locationId:l,address:d}=t.body;if(!n||!s||!a||!l)return e.status(400).json({error:"Missing required fields"});try{let t,u=new Date,p=(await o.collection("contacts").insertOne({firstName:n,lastName:s,email:a,phone:c,notes:i,address:d,locationId:l,createdAt:u,updatedAt:u})).insertedId,f=await o.collection("locations").findOne({locationId:l});if(!f||!f.apiKey)return console.warn(`‚ö†Ô∏è API key missing for locationId: ${l}`),e.status(201).json({success:!0,contactId:p,message:"Contact saved locally. GHL sync skipped (no API key found)."});let y=f.apiKey;console.log(`üîé Attempting GHL sync for locationId: ${l}`),console.log(`üîë Using API key: ${y?.slice(0,8)}...${y?.slice(-4)}`);let A={firstName:n,lastName:s,email:a,phone:c,address1:d,locationId:l},h={Authorization:`Bearer ${y}`,"Content-Type":"application/json",Version:"2021-07-28"};console.log("\uD83D\uDE80 SENDING TO GHL:"),console.log("URL:","https://services.leadconnectorhq.com/contacts/"),console.log("BODY:",JSON.stringify(A,null,2)),console.log("HEADERS:",{...h,Authorization:`${y?.slice(0,8)}...${y?.slice(-4)}`});try{let e=await r.default.post("https://services.leadconnectorhq.com/contacts/",A,{headers:h});(t=e.data.contact?.id)?(await o.collection("contacts").updateOne({_id:p},{$set:{ghlContactId:t}}),console.log("‚úÖ Contact synced to GHL with ID:",t)):console.warn("‚ö†Ô∏è GHL did not return contact ID.",e.data)}catch(t){return console.error("‚ùå Failed to add contact or sync with GHL:",t.response?.data,t.response?.status,t.response?.headers),e.status(201).json({success:!1,contactId:p,error:t.response?.data||t.message,message:"Contact saved locally, but sync to GHL failed."})}return e.status(201).json({success:!0,contactId:p,ghlContactId:t})}catch(t){return console.error("‚ùå Failed to add contact or sync with GHL:",t.response?.data||t.message),e.status(500).json({error:"Failed to add contact or sync with GHL"})}}r=(a.then?(await a)():a)[0],n()}catch(t){n(t)}})},8667:(t,e)=>{Object.defineProperty(e,"A",{enumerable:!0,get:function(){return o}});var o=function(t){return t.PAGES="PAGES",t.PAGES_API="PAGES_API",t.APP_PAGE="APP_PAGE",t.APP_ROUTE="APP_ROUTE",t.IMAGE="IMAGE",t}({})},9194:(t,e,o)=>{o.d(e,{A:()=>r});var n=o(2518);let s=process.env.MONGODB_URI;if(!s)throw Error("‚ö†Ô∏è MONGODB_URI is missing in environment variables");let r=new n.MongoClient(s,{}).connect()}};var e=require("../../webpack-api-runtime.js");e.C(t);var o=e(e.s=4025);module.exports=o})();